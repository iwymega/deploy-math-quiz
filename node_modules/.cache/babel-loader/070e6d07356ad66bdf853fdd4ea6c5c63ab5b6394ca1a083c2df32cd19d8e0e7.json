{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: [\"operator\"],\n  data() {\n    return {\n      isQuizStarted: false,\n      operandLeft: null,\n      operandRight: null,\n      answers: [],\n      expectedAnswer: null\n    };\n  },\n  methods: {\n    selectAnswer(answerSelected) {\n      if (answerSelected !== this.expectedAnswer) {\n        alert(\"Wrong Answer\");\n      }\n      this.startQuiz();\n    },\n    startQuiz() {\n      this.isQuizStarted = true;\n      this.operandLeft = parseInt(Math.random() * 13);\n      this.operandRight = parseInt(Math.random() * 13);\n      const methods = {\n        \"+\": (a, b) => a + b,\n        \"-\": (a, b) => a - b,\n        \"/\": (a, b) => a / b,\n        \"*\": (a, b) => a * b\n      };\n      const methodTouse = methods[this.operator];\n      this.answers = [];\n      this.answers.push(methodTouse(this.operandLeft, this.operandRight + 1));\n      this.answers.push(methodTouse(this.operandLeft + 1, this.operandRight));\n      this.answers.push(methodTouse(this.operandLeft + 1, this.operandRight + 1));\n      this.answers.push(methodTouse(this.operandLeft - 1, this.operandRight + 1));\n      this.answers.push(methodTouse(this.operandLeft, this.operandRight - 1));\n      const expectedAnswer = methodTouse(this.operandLeft, this.operandRight);\n      this.answers[parseInt(Math.random() * this.answers.length)] = expectedAnswer;\n      this.expectedAnswer = expectedAnswer;\n    }\n  }\n};","map":{"version":3,"mappings":";AAsBA,eAAe;EACbA,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,IAAI,GAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,CAACC,cAAc,EAAE;MAC3B,IAAIA,cAAa,KAAM,IAAI,CAACH,cAAc,EAAE;QAC1CI,KAAK,CAAC,cAAc,CAAC;MACvB;MACA,IAAI,CAACC,SAAS,EAAE;IAClB,CAAC;IACDA,SAAS,GAAG;MACV,IAAI,CAACT,aAAY,GAAI,IAAI;MACzB,IAAI,CAACC,WAAU,GAAIS,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAC,GAAI,EAAE,CAAC;MAC/C,IAAI,CAACV,YAAW,GAAIQ,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAC,GAAI,EAAE,CAAC;MAEhD,MAAMP,OAAM,GAAI;QACd,GAAG,EAAE,CAACQ,CAAC,EAAEC,CAAC,KAAKD,IAAIC,CAAC;QACpB,GAAG,EAAE,CAACD,CAAC,EAAEC,CAAC,KAAKD,IAAIC,CAAC;QACpB,GAAG,EAAE,CAACD,CAAC,EAAEC,CAAC,KAAKD,IAAIC,CAAC;QACpB,GAAG,EAAE,CAACD,CAAC,EAAEC,CAAC,KAAKD,IAAIC;MACrB,CAAC;MAED,MAAMC,WAAU,GAAIV,OAAO,CAAC,IAAI,CAACW,QAAQ,CAAC;MAE1C,IAAI,CAACb,OAAM,GAAI,EAAE;MACjB,IAAI,CAACA,OAAO,CAACc,IAAI,CAACF,WAAW,CAAC,IAAI,CAACd,WAAW,EAAE,IAAI,CAACC,YAAW,GAAI,CAAC,CAAC,CAAC;MACvE,IAAI,CAACC,OAAO,CAACc,IAAI,CAACF,WAAW,CAAC,IAAI,CAACd,WAAU,GAAI,CAAC,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC;MACvE,IAAI,CAACC,OAAO,CAACc,IAAI,CACfF,WAAW,CAAC,IAAI,CAACd,WAAU,GAAI,CAAC,EAAE,IAAI,CAACC,YAAW,GAAI,CAAC,EACxD;MACD,IAAI,CAACC,OAAO,CAACc,IAAI,CACfF,WAAW,CAAC,IAAI,CAACd,WAAU,GAAI,CAAC,EAAE,IAAI,CAACC,YAAW,GAAI,CAAC,EACxD;MACD,IAAI,CAACC,OAAO,CAACc,IAAI,CAACF,WAAW,CAAC,IAAI,CAACd,WAAW,EAAE,IAAI,CAACC,YAAW,GAAI,CAAC,CAAC,CAAC;MAEvE,MAAME,cAAa,GAAIW,WAAW,CAAC,IAAI,CAACd,WAAW,EAAE,IAAI,CAACC,YAAY,CAAC;MACvE,IAAI,CAACC,OAAO,CAACO,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAC,GAAI,IAAI,CAACT,OAAO,CAACe,MAAM,CAAC,IACxDd,cAAc;MAChB,IAAI,CAACA,cAAa,GAAIA,cAAc;IACtC;EACF;AACF,CAAC","names":["props","data","isQuizStarted","operandLeft","operandRight","answers","expectedAnswer","methods","selectAnswer","answerSelected","alert","startQuiz","parseInt","Math","random","a","b","methodTouse","operator","push","length"],"sourceRoot":"","sources":["D:\\Project\\vue\\math-quiz\\src\\components\\OperatorQuiz.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"isQuizStarted\">\r\n      <h4>{{ operandLeft }} {{ operator }} {{ operandRight }}</h4>\r\n\r\n      <button\r\n        @click=\"selectAnswer(answer)\"\r\n        v-for=\"(answer, index) of answers\"\r\n        :key=\"index\"\r\n      >\r\n        {{ answer }}\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"!isQuizStarted\">\r\n      <button @click=\"startQuiz\">Start</button>\r\n    </div>\r\n    <button @click=\"$emit('onBack')\">Back</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"operator\"],\r\n  data() {\r\n    return {\r\n      isQuizStarted: false,\r\n      operandLeft: null,\r\n      operandRight: null,\r\n      answers: [],\r\n      expectedAnswer: null,\r\n    };\r\n  },\r\n  methods: {\r\n    selectAnswer(answerSelected) {\r\n      if (answerSelected !== this.expectedAnswer) {\r\n        alert(\"Wrong Answer\");\r\n      }\r\n      this.startQuiz();\r\n    },\r\n    startQuiz() {\r\n      this.isQuizStarted = true;\r\n      this.operandLeft = parseInt(Math.random() * 13);\r\n      this.operandRight = parseInt(Math.random() * 13);\r\n\r\n      const methods = {\r\n        \"+\": (a, b) => a + b,\r\n        \"-\": (a, b) => a - b,\r\n        \"/\": (a, b) => a / b,\r\n        \"*\": (a, b) => a * b,\r\n      };\r\n\r\n      const methodTouse = methods[this.operator];\r\n\r\n      this.answers = [];\r\n      this.answers.push(methodTouse(this.operandLeft, this.operandRight + 1));\r\n      this.answers.push(methodTouse(this.operandLeft + 1, this.operandRight));\r\n      this.answers.push(\r\n        methodTouse(this.operandLeft + 1, this.operandRight + 1)\r\n      );\r\n      this.answers.push(\r\n        methodTouse(this.operandLeft - 1, this.operandRight + 1)\r\n      );\r\n      this.answers.push(methodTouse(this.operandLeft, this.operandRight - 1));\r\n\r\n      const expectedAnswer = methodTouse(this.operandLeft, this.operandRight);\r\n      this.answers[parseInt(Math.random() * this.answers.length)] =\r\n        expectedAnswer;\r\n      this.expectedAnswer = expectedAnswer;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}